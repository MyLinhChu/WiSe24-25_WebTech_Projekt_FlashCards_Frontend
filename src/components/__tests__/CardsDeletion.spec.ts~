import { describe, it, expect, vi } from 'vitest';
import { mount } from '@vue/test-utils';
import { createRouter, createMemoryHistory } from 'vue-router';
import { createTestingPinia } from '@pinia/testing';
import HomeView from '../../views/HomeView.vue';
import LearnView from '../../views/LearnView.vue';

describe('HomeView.vue - Navigation to LearnView', () => {
  it('navigates to LearnView when "Start Learning" is clicked', async () => {
    const router = createRouter({
      history: createMemoryHistory(),
      routes: [
        { path: '/', name: 'home', component: HomeView },
        { path: '/learn/:id', name: 'learn', component: LearnView },
      ],
    });

    const wrapper = mount(HomeView, {
      global: {
        plugins: [
          createTestingPinia({
            createSpy: vi.fn,
            initialState: {
              deck: {
                decks: [{ id: 1, name: 'Sample Deck', description: '', cards: [] }],
              },
            },
          }),
          router,
        ],
        stubs: ['router-link'],
      },
    });

    await router.isReady();

    // Simulate clicking "Start Learning"
    const learnButton = wrapper.find('a[href="/learn/1"]');
    await learnButton.trigger('click');

    // Assert that the route is updated
    expect(router.currentRoute.value.name).toBe('learn');
  });
});

